--lab 17
CREATE TABLE Customers (
Customer_id INT PRIMARY KEY,                 
Customer_Name VARCHAR(250) NOT NULL,         
Email VARCHAR(50) UNIQUE  
); 
CREATE TABLE Orders ( 
Order_id INT PRIMARY KEY,                    
Customer_id INT,                             
Order_date DATE NOT NULL,                    
FOREIGN KEY (Customer_id) REFERENCES Customers(Customer_id)  
);

--Part – A--1. Handle Divide by Zero Error and Print message like: Error occurs that is - Divide by zero error.declare @a int,@b intbegin tryset @a=10set @b = @a/0end trybegin catch	print 'error occured' + ERROR_MESSAGE()end catch--2. Try to convert string to integer and handle the error using try…catch block.declare @ab varchar(100),@bs intbegin tryset @ab = 'hi'set @bs = CAST(@ab as int)end trybegin catchprint 'error occured' + ERROR_MESSAGE()end catch--3. Create a procedure that prints the sum of two numbers: take both numbers as integer & handle exception with all error functions if any one enters string value in numbers otherwise print result.create or alter procedure proctry@a varchar(100),@b varchar(100)asbegin begin try declare @r int,@s int,@sum int set @r =  cast(@a as int) set @s = cast(@b as int) set @sum = @r+@s print @sumend trybegin catchprint 'error occured' + ERROR_MESSAGE()end catchendexec proctry '2' ,10--4. Handle a Primary Key Violation while inserting data into customers table and print the error details such as the error message, error number, severity, and state..create or alter procedure primekey@cid varchar(100),@cname varchar(100),@cemail varchar(100)asbegin begin try insert into Customers values(@cid,@cname,@cemail)end trybegin catchprint 'error message is: ' + ERROR_MESSAGE()print '  error number is:  ' + CAST(ERROR_NUMBER() as varchar)print 'error severty is: ' +Cast(ERROR_severity() as varchar)print ' error state is:  '+ Cast(error_state() as varchar) end catchendexec primekey 1,'yatarth','abc@gmail.com'--5. Throw custom exception using stored procedure which accepts Customer_id as input & that throws Error like no Customer_id is available in database.create or alter procedure checkid@cid intasbegin	begin try		if(@cid not in (select Customer_id from Customers))			throw 50001, 'no Customer_id is available in database.',1		else			select * from Customers where Customer_id = @cid	end try	begin catch		print 'error message is: ' + ERROR_MESSAGE()	end catchendexec checkid 2--part-B --1. Handle a Foreign Key Violation while inserting data into Orders table and print appropriate error messagebegin try 	insert into Orders values(1,2,'2024-01-01')end trybegin catch	print 'error: ' +ERROR_MESSAGE()end catch--2. Throw custom exception that throws error if the data is invalid.create or alter procedure wrongdata@a intasbegin begin try if(@a = 0)	throw 50001,'worng data inserted',1end trybegin catch	print error_message()end catchendexec wrongdata 0--3. Create a Procedure to Update Customer’s Email with Error Handlingcreate or alter procedure updateuser@cid int,@email varchar(100)asbegin	begin try		if(@cid in (select Customer_id from Customers))			update Customers set Email = @email where Customer_id =@cid		else			throw 50001,'Id does not exist',1	end try	begin catch		print error_message()	end catchendexec updateuser 4,'abc@gmail.com'--Part-c--1. Create a procedure which prints the error message that “The Customer_id is already taken. Try another one”.create or alter procedure insertuser@cid int,@cname varchar(100),@email varchar(100)asbegin	begin try		if(@cid not in (select Customer_id from Customers))			insert into Customers values(@cid,@cname,@email)		else			throw 50001,'The Customer_id is already taken. Try another one',1	end try	begin catch		print error_message()	end catchendexec insertuser 1,'yath','email@email.com'--2. Handle Duplicate Email Insertion in Customers Table.create or alter procedure insertusere@cid int,@cname varchar(100),@email varchar(100)asbegin	begin try		if(@email in (select Email from Customers))			throw 50001,'The Email id is already taken. Try another one',1		else			insert into Customers values(@cid,@cname,@email)	end try	begin catch		print error_message()	end catchendexec insertusere 3,'yath','abc@email.com'